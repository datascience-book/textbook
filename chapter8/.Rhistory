all_dt[, notes := NULL]
# Drop rate
all_dt[, crude_rate := NULL]
all_dt
?data.table
all_dt[,
lapply(X = .SD, FUN = as.integer),
.SDcols = c("county_code", "year", "year_code", "deaths", "population")
]
all_dt
all_dt[is.na(deaths)]
all_dt[is.na(year)]
all_dt[is.na(year_code)]
all_dt[is.na(county_code)]
all_dt[is.na(population)]
summary(all_dt)
all_dt[,
lapply(X = .SD, FUN = as.integer),
.SDcols = c("county_code", "year", "year_code", "deaths", "population")
]
# MCD file: All causes ---------------------------------------------------------
# Read in data
all_dt <- fread(
file = dir_cdc %>% paste0("mcd_all_1999_2016.txt"),
header = T,
nrows = 56646,
nThread = 8
)
# Clean names
setnames(
all_dt,
all_dt %>% names() %>% str_to_lower() %>% str_replace_all("\\s", "_")
)
setnames(all_dt, old = "county", new = "county_state")
# Drop 'notes'
all_dt[, notes := NULL]
# Drop rate
all_dt[, crude_rate := NULL]
# Format numeric variables
all_dt[, `:=`(
county_code = county_code %>% as.integer(),
year = year %>% as.integer(),
year_code = year_code %>% as.integer(),
deaths = deaths %>% as.integer(),
population = population %>% as.integer()
)]
# Split 'county_state' into 'county' and 'state'
all_dt[, c("county", "state") := tstrsplit(county_state, ",")]
all_dt[, `:=`(
county = county %>% str_trim(),
state = state %>% str_trim()
)]
all_dt
all_dt[is.na(population)]
all_dt[is.na(population), state] %>% table
all_dt[is.na(deaths), state] %>% table
all_dt[is.na(deaths) & state == "TX"] %>% table
all_dt[is.na(deaths) & state == "TX"]
all_dt[is.na(deaths) & state == "TX", population] %>% summary
all_dt[is.na(deaths), population] %>% summary
all_dt[is.na(deaths), population] %>% quantile(probs = c(0.25, 0.75))
all_dt[is.na(deaths), population] %>% quantile(probs = c(0.25, 0.75), na.rm = T)
all_dt[is.na(deaths), population] %>% quantile(probs = c(0.25, 0.75), na.rm = T)
all_dt[is.na(deaths), population] %>% quantile(probs = c(0.05, 0.95), na.rm = T)
all_dt[is.na(deaths), population] %>% quantile(probs = c(0.01, 0.99), na.rm = T)
all_dt[is.na(deaths), population] %>% quantile(probs = c(0.01, 0.95), na.rm = T)
all_dt[is.na(deaths), population < 2e3] %>% mean(na.rm = T)
all_dt[is.na(deaths)]
all_dt %>% dim
all_dt$state %>% table
all_dt$state %>% uniqueN
all_dt <- all_dt[!(state %in% c("AK", "HI"))]
all_dt
all_dt[, is.na(deaths)] %>% mean
# MCD file: Respiratory --------------------------------------------------------
# Read in data
res_dt <- fread(
file = dir_cdc %>% paste0("mcd_respiratory_1999_2016.txt"),
header = T,
nrows = 56646,
nThread = 8
)
# Clean names
setnames(
res_dt,
res_dt %>% names() %>% str_to_lower() %>% str_replace_all("\\s", "_")
)
setnames(res_dt, old = "county", new = "county_state")
# Drop 'notes'
res_dt[, notes := NULL]
# Drop rate
res_dt[, crude_rate := NULL]
# Format numeric variables
res_dt[, `:=`(
county_code = county_code %>% as.integer(),
year = year %>% as.integer(),
year_code = year_code %>% as.integer(),
deaths = deaths %>% as.integer(),
population = population %>% as.integer()
)]
# Split 'county_state' into 'county' and 'state'
res_dt[, c("county", "state") := tstrsplit(county_state, ",")]
res_dt[, `:=`(
county = county %>% str_trim(),
state = state %>% str_trim()
)]
# Drop Alaska and Hawaii
res_dt <- res_dt[!(state %in% c("AK", "HI"))]
res_dt %>% dim
all_dt %>% dim
res_dt %>% tail
# MCD file: Respiratory --------------------------------------------------------
# Read in data
res_dt <- fread(
file = dir_cdc %>% paste0("mcd_respiratory_1999_2016.txt"),
header = T,
nrows = 56646,
nThread = 8
)
# Clean names
setnames(
res_dt,
res_dt %>% names() %>% str_to_lower() %>% str_replace_all("\\s", "_")
)
setnames(res_dt, old = "county", new = "county_state")
# Drop 'notes'
res_dt[, notes := NULL]
# Drop rate
res_dt[, crude_rate := NULL]
# Format numeric variables
res_dt[, `:=`(
county_code = county_code %>% as.integer(),
year = year %>% as.integer(),
year_code = year_code %>% as.integer(),
deaths = deaths %>% as.integer(),
population = population %>% as.integer()
)]
# Split 'county_state' into 'county' and 'state'
res_dt[, c("county", "state") := tstrsplit(county_state, ",")]
res_dt[, `:=`(
county = county %>% str_trim(),
state = state %>% str_trim()
)]
# Drop Alaska and Hawaii
res_dt <- res_dt[!(state %in% c("AK", "HI"))]
res_dt
all_dt
# Quick summaries --------------------------------------------------------------
# Share of county-year observations missing number of deaths
all_dt[, is.na(deaths)] %>% mean()
res_dt[, is.na(deaths)] %>% mean()
# Quick summaries --------------------------------------------------------------
# Share of county-year observations missing number of deaths
all_dt[, is.na(deaths)] %>% mean()
res_dt[, is.na(deaths)] %>% mean()
# Population of county-year observations missing number of deaths
all_dt[, is.na(deaths)] %>% quantile(probs = 0.95)
res_dt[, is.na(deaths)] %>% quantile(probs = 0.95)
# Quick summaries --------------------------------------------------------------
# Share of county-year observations missing number of deaths
all_dt[, is.na(deaths)] %>% mean()
res_dt[, is.na(deaths)] %>% mean()
# Population of county-year observations missing number of deaths
all_dt[is.na(deaths), population] %>% quantile(probs = 0.95, na.rm = T)
res_dt[is.na(deaths), population] %>% quantile(probs = 0.95, na.rm = T)
setwd("~/Dropbox/Research/MyBooks/DataScience/Textbook/chapter8/")
dir()
setwd("~/Dropbox/Research/MyBooks/DataScience/Textbook/chapter8/")
?rmarkdown::html_notebook()
rmarkdown::render(input = "chapter8.Rmd", output_format = "html_document")
rmarkdown::render(input = "chapter8.Rmd", output_format = "html_document")
reg_dt
reg_dt[, .(y = mean(y), x = mean(x))]
rmarkdown::render(input = "chapter8.Rmd", output_format = "html_document")
# OLS regression
reg_lm <- lm(y ~ x, data = reg_dt)
b <- reg_lm$coefficients
# Plot the points
ggplot(data = reg_dt, aes(x = x, y = y)) +
geom_abline(
aes(intercept = b[1], slope = b[2], color = "OLS"),
size = 0.8
) +
geom_point(alpha = 0.2) +
geom_point(reg_dt[, .(x = mean(x), y = mean(y))]) +
labs(color = "") +
theme_pander()
# OLS regression
reg_lm <- lm(y ~ x, data = reg_dt)
b <- reg_lm$coefficients
# Plot the points
ggplot(data = reg_dt, aes(x = x, y = y)) +
geom_abline(
aes(intercept = b[1], slope = b[2], color = "OLS"),
size = 0.8
) +
geom_point(alpha = 0.2) +
labs(color = "") +
theme_pander()
# OLS regression
reg_lm <- lm(y ~ x, data = reg_dt)
b <- reg_lm$coefficients
# Plot the points
ggplot(data = reg_dt, aes(x = x, y = y)) +
geom_abline(
aes(intercept = b[1], slope = b[2], color = "OLS"),
size = 0.8
) +
geom_point(alpha = 0.2) +
labs(color = "") +
theme_pander()
# OLS regression
reg_lm <- lm(y ~ x, data = reg_dt)
b <- reg_lm$coefficients
# Plot the points
ggplot(data = reg_dt, aes(x = x, y = y)) +
geom_abline(
aes(intercept = b[1], slope = b[2], color = "OLS"),
size = 0.8
) +
geom_point(alpha = 0.2) +
geom_point(
data = reg_dt[, .(x = mean(x), y = mean(y))]
) +
geom_text(
aes(x = x, y = y, label = lab),
data = reg_dt[, .(x = mean(x), y = mean(y), lab = "Means")]
) +
labs(color = "") +
theme_pander()
# OLS regression
reg_lm <- lm(y ~ x, data = reg_dt)
b <- reg_lm$coefficients
# Plot the points
ggplot(data = reg_dt, aes(x = x, y = y)) +
geom_abline(
aes(intercept = b[1], slope = b[2], color = "OLS"),
size = 0.8
) +
geom_point(alpha = 0.2) +
geom_point(
data = reg_dt[, .(x = mean(x), y = mean(y))]
) +
geom_text(
data = reg_dt[, .(x = mean(x), y = mean(y), lab = "Means")],
aes(x = x, y = y, label = lab),
size = 1.2
) +
labs(color = "") +
theme_pander()
# OLS regression
reg_lm <- lm(y ~ x, data = reg_dt)
b <- reg_lm$coefficients
# Plot the points
ggplot(data = reg_dt, aes(x = x, y = y)) +
geom_abline(
aes(intercept = b[1], slope = b[2], color = "OLS"),
size = 0.8
) +
geom_point(alpha = 0.2) +
geom_point(
data = reg_dt[, .(x = mean(x), y = mean(y))],
size = 1.2
) +
geom_text(
data = reg_dt[, .(x = mean(x), y = mean(y), lab = "Means")],
aes(x = x, y = y, label = lab),
hjust = 0, vjust = 0
) +
labs(color = "") +
theme_pander()
# OLS regression
reg_lm <- lm(y ~ x, data = reg_dt)
b <- reg_lm$coefficients
# Plot the points
ggplot(data = reg_dt, aes(x = x, y = y)) +
geom_abline(
aes(intercept = b[1], slope = b[2], color = "OLS"),
size = 0.8
) +
geom_point(alpha = 0.2) +
geom_point(
data = reg_dt[, .(x = mean(x), y = mean(y))],
size = 1.2
) +
geom_text(
data = reg_dt[, .(x = mean(x), y = mean(y), lab = "Means")],
aes(x = x, y = y, label = lab),
hjust = 0, vjust = 0
) +
labs(color = "") +
theme_pander()
# OLS regression
reg_lm <- lm(y ~ x, data = reg_dt)
b <- reg_lm$coefficients
# Plot the points
ggplot(data = reg_dt, aes(x = x, y = y)) +
geom_abline(
aes(intercept = b[1], slope = b[2], color = "OLS"),
size = 0.8
) +
geom_point(alpha = 0.2) +
geom_point(
data = reg_dt[, .(x = mean(x), y = mean(y))],
size = 2
) +
geom_text(
data = reg_dt[, .(x = mean(x), y = mean(y), lab = "Means")],
aes(x = x, y = y, label = lab),
hjust = 0, vjust = 0
) +
labs(color = "") +
theme_pander()
# OLS regression
reg_lm <- lm(y ~ x, data = reg_dt)
b <- reg_lm$coefficients
# Plot the points
ggplot(data = reg_dt, aes(x = x, y = y)) +
geom_abline(
aes(intercept = b[1], slope = b[2], color = "OLS"),
size = 0.8
) +
geom_point(alpha = 0.2) +
geom_point(
data = reg_dt[, .(x = mean(x), y = mean(y))],
size = 2
) +
geom_text(
data = reg_dt[, .(x = mean(x), y = mean(y), lab = "Means")],
aes(x = x, y = y, label = lab),
hjust = 0, vjust = 0, nudge_y = 0.5, nudge_x = 0.25
) +
labs(color = "") +
theme_pander()
# OLS regression
reg_lm <- lm(y ~ x, data = reg_dt)
b <- reg_lm$coefficients
# Plot the points
ggplot(data = reg_dt, aes(x = x, y = y)) +
geom_abline(
aes(intercept = b[1], slope = b[2], color = "OLS"),
size = 0.8
) +
geom_point(alpha = 0.2) +
geom_point(
data = reg_dt[, .(x = mean(x), y = mean(y))],
size = 2
) +
geom_text(
data = reg_dt[, .(x = mean(x), y = mean(y), lab = "Means")],
aes(x = x, y = y, label = lab),
hjust = 0, vjust = 0, nudge_y = 0.1, nudge_x = 0.1
) +
labs(color = "") +
theme_pander()
# OLS regression
reg_lm <- lm(y ~ x, data = reg_dt)
b <- reg_lm$coefficients
# Plot the points
ggplot(data = reg_dt, aes(x = x, y = y)) +
geom_abline(
aes(intercept = b[1], slope = b[2], color = "OLS"),
size = 0.8
) +
geom_point(alpha = 0.2) +
geom_point(
data = reg_dt[, .(x = mean(x), y = mean(y))],
size = 2
) +
geom_text(
data = reg_dt[, .(x = mean(x), y = mean(y), lab = "Means")],
aes(x = x, y = y, label = lab),
hjust = 0.5, vjust = -1, nudge_y = 0.1, nudge_x = 0.1
) +
labs(color = "") +
theme_pander()
rmarkdown::render(input = "chapter8.Rmd", output_format = "html_document")
# OLS regression
reg_lm <- lm(y ~ x, data = reg_dt)
b <- reg_lm$coefficients
# Plot the points
ggplot(data = reg_dt, aes(x = x, y = y)) +
geom_abline(
aes(intercept = b[1], slope = b[2], color = "OLS"),
size = 0.8
) +
geom_point(alpha = 0.2) +
geom_point(
data = reg_dt[, .(x = mean(x), y = mean(y))],
size = 2
) +
geom_text(
aes(
x = mean(reg_dt[,x]),
y = mean(reg_dt[,y]),
label = TeX("$\\left(\\overline{x},\\,\\overline{y}\\right)$", output = "character"),
parse = T
),
hjust = 0.5, vjust = -1, nudge_y = 0.1, nudge_x = 0.1
) +
labs(color = "") +
theme_pander()
install.packages("latex2exp")
rmarkdown::render(input = "chapter8.Rmd", output_format = "html_document")
# OLS regression
reg_lm <- lm(y ~ x, data = reg_dt)
b <- reg_lm$coefficients
# Plot the points
ggplot(data = reg_dt, aes(x = x, y = y)) +
geom_abline(
aes(intercept = b[1], slope = b[2], color = "OLS"),
size = 0.8
) +
geom_point(alpha = 0.2) +
geom_point(
data = reg_dt[, .(x = mean(x), y = mean(y))],
size = 2
) +
geom_text(
aes(
x = mean(reg_dt[,x]),
y = mean(reg_dt[,y]),
label = TeX("$\\left(\\overline{x},\\,\\overline{y}\\right)$", output = "character"),
parse = T
),
hjust = 0.5, vjust = -1, nudge_y = 0.1, nudge_x = 0.1
) +
labs(color = "") +
theme_pander()
?goem_tet
?geom_text
# OLS regression
reg_lm <- lm(y ~ x, data = reg_dt)
b <- reg_lm$coefficients
# Plot the points
ggplot(data = reg_dt, aes(x = x, y = y)) +
geom_abline(
aes(intercept = b[1], slope = b[2], color = "OLS"),
size = 0.8
) +
geom_point(alpha = 0.2) +
geom_point(
data = reg_dt[, .(x = mean(x), y = mean(y))],
size = 2
) +
geom_text(
aes(
x = mean(reg_dt[,x]),
y = mean(reg_dt[,y]),
label = TeX("$\\left(\\overline{x},\\,\\overline{y}\\right)$", output = "character")
),
hjust = 0.5, vjust = -1, nudge_y = 0.1, nudge_x = 0.1,
parse = T
) +
labs(color = "") +
theme_pander()
# OLS regression
reg_lm <- lm(y ~ x, data = reg_dt)
b <- reg_lm$coefficients
# Plot the points
ggplot(data = reg_dt, aes(x = x, y = y)) +
geom_abline(
aes(intercept = b[1], slope = b[2], color = "OLS"),
size = 0.8
) +
geom_point(alpha = 0.2) +
geom_point(
data = reg_dt[, .(x = mean(x), y = mean(y))],
size = 2
) +
geom_text(
aes(
x = mean(reg_dt[,x]),
y = mean(reg_dt[,y]),
label = TeX("$\\left(\\bar{x},\\,\\bar{y}\\right)$", output = "character")
),
hjust = 0.5, vjust = -1, nudge_y = 0.1, nudge_x = 0.1,
parse = T
) +
labs(color = "") +
theme_pander()
rmarkdown::render(input = "chapter8.Rmd", output_format = "html_document")
rmarkdown::render(input = "chapter8.Rmd", output_format = "html_document")
rmarkdown::render(input = "chapter8.Rmd", output_format = "html_document")
?render
?rmarkdown::html_document
rmarkdown::render(input = "chapter8.Rmd", output_format = html_document(toc = T))
library(rmarkdonw)
rmarkdown::render(input = "chapter8.Rmd", output_format = rmarkdown::html_document(toc = T))
rmarkdown::render(input = "chapter8.Rmd", output_format = rmarkdown::html_document(toc = T))
rmarkdown::render(input = "chapter8.Rmd", output_format = rmarkdown::html_document(toc = T))
dir()
tmp <- fread("denver_housing_sales.csv")
tmp %>% head
tmp[,SALE_YEAR] %>% table
tmp <- tmp[SALE_YEAR == 2017]
tmp
fwrite(tmp, file = "denver_housing_sales_2017")
tmp
tmp$D_CLASS_CN %>% table
test <- tmp$D_CLASS_CN %>% table
test
test[order(test)]
fwrite(tmp[D_CLASS_CN %in% c("ROWHOUSE", "CONDOMINIUM", "SINGLE FAMILY")], file = "denver_housing_sales_2017")
rmarkdown::render(input = "chapter8.Rmd", output_format = rmarkdown::html_document(toc = T))
sale_dt
library(readr)
# Read in .csv of property sales
sale_dt <- read_csv("denver_housing_sales_2017.csv")
rmarkdown::render(input = "chapter8.Rmd", output_format = rmarkdown::html_document(toc = T))
sale_dt %>% names
View(sale_dt[1:100,])
