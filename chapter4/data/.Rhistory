reshape(crimes_mon,
idvar = "period",
timevar = "ward",
direction = "wide")
crimes_ward <- reshape(crimes_mon,
idvar = "period",
timevar = "ward",
direction = "wide")
colnames(crimes_ward) <- gsub("arrest.rate", "ward",  colnames(crimes_ward))
View(crimes_ward)
asd <- melt(crimes_ward, id = c("period"))
library(reshape2)
asd <- melt(crimes_ward, id = c("period"))
View(asd)
crimes_mon <- crimes  %>%
group_by(period, ward, primary.type) %>%
summarise(arrest.rate = 100 * mean(arrest))
crimes_mon <- as.data.frame(crimes_mon)
crimes_ward <- reshape(crimes_mon,
idvar = "period",
timevar = "ward",
direction = "wide")
crimes_ward <- reshape(crimes_mon,
idvar = c("period"),
timevar = c("ward", "primary.type"),
direction = "wide")
View(crimes_ward)
#Prep Crime data
crimes <- readr::read_csv("~/Downloads/Crimes_-_2001_to_present.csv")
colnames(crimes) <- gsub("[[:space:][:punct:]]", ".",tolower(colnames(crimes)))
crimes <- crimes[,-c(19,22, 16,17, 15)]
crimes$arrest <- crimes$arrest == "true"
crimes$domestic <- crimes$domestic == "true"
save(crimes, file = "/Users/jeff/Downloads/chicago_crime.Rda")
#Reshape example
require(dplyr)
#Convert to date form and extract the the quarter
crimes$date1 <- mdy_hms(crimes$date)
crimes$period <- format(crimes$date1, "%Y-%m")
crimes <- crimes[complete.cases(crimes),]
crimes_mon <- crimes  %>%
group_by(period, ward) %>%
summarise(arrest.rate = 100 * mean(arrest))
crimes_mon <- as.data.frame(crimes_mon)
crimes_ward <- reshape(crimes_mon,
idvar = "period",
timevar = "ward",
direction = "wide")
colnames(crimes_ward) <- gsub("arrest.rate", "ward",  colnames(crimes_ward))
save(crimes_ward, file = "/Users/jeff/Downloads/crimes_ward.Rda")
head(crimes_ward)
head(crimes_ward[1:5,1:5])
knitr::kable(crimes_ward[1:5,1:5], booktabs = TRUE,
caption = 'Terms after removing stop words')  %>%
kable_styling(latex_options = c("hold_position"))
knitr::kable(crimes_ward[1:5,1:5], booktabs = TRUE,
caption = 'Terms after removing stop words')
knitr::kable(crimes_ward[1:5,1:5], booktabs = TRUE,
caption = 'Terms after removing stop words', digits = 2)
crimes_long <-   melt(crimes_ward, id = c("period")
knitr::kable(crimes_long[1:5,1:5], booktabs = TRUE,
crimes_long <-   melt(crimes_ward, id = c("period"))
knitr::kable(crimes_long[1:5,1:5], booktabs = TRUE,
caption = 'Example of long data.', digits = 2)
knitr::kable(crimes_long[1:5,1:3], booktabs = TRUE,
caption = 'Example of long data.', digits = 2)
crimes_long <-   melt(crimes_ward, id = c("period"))
colnames(crimes_long)[2] <- "ward"
knitr::kable(crimes_long[1:5,1:3], booktabs = TRUE,
caption = 'Example of long data.', digits = 2)
crimes_long <-   melt(crimes_ward, id = c("period"),
variable.name = "ward",
value.name = "arrest.rates")
knitr::kable(crimes_long[1:5,1:3], booktabs = TRUE,
caption = 'Example of long data.', digits = 2)
crimes_long$ward <- gsub("ward\\.","",crimes_long$ward)
knitr::kable(crimes_long[1:5,1:3], booktabs = TRUE,
caption = 'Example of long data.', digits = 2)
crimes_long <-   melt(crimes_ward, id = c("period"),
variable.name = "ward",
value.name = "arrest.rates")
knitr::kable(crimes_long[1:5,1:3], booktabs = TRUE,
caption = 'Example of long data.', digits = 2)
aqw <- dcast(crimes_long, period ~ ward)
colnames(crimes_long)
aqw <- dcast(crimes_long, period ~ ward)
aqw <- dcast(crimes_long, period ~ ward,
value.var = arrest.rates)
aqw <- dcast(crimes_long, period ~ ward)
crimes_wide <- dcast(crimes_long, period ~ ward)
View(crimes_wide)
select(crimes, latitude, longitude)
class(crimes)
select(as_tibble(crimes) , latitude, longitude)
select(as.data.frame(crimes) , latitude, longitude)
select(as_data_frame(crimes) , latitude, longitude)
select(as_tbl_df(crimes) , latitude, longitude)
select(tbl_df(crimes) , latitude, longitude)
colnames(crimes)
?select
require(dplyr)
p_unload(raster)
#dplyr approach
crimes_geo <- select(crimes, latitude, longitude)
library(knitr)
library(kableExtra)
library(rvest)
library(plyr)
library(DT)
speech <- "Now, one place to start is serious financial reform.  Look, I am not interested in punishing banks.  I'm interested in protecting our economy.  A strong, healthy financial market makes it possible for businesses to access credit and create new jobs. It channels the savings of families into investments that raise incomes.  But that can only happen if we guard against the same recklessness that nearly brought down our entire economy. We need to make sure consumers and middle-class families have the information they need to make financial decisions.  We can't allow financial institutions, including those that take your deposits, to take risks that threaten the whole economy. "
stripped <- gsub("[[:punct:]]","",speech)
stripped <- gsub("[[:digit:]]","",stripped)
stripped <- gsub("[^[:graph:]]"," ",stripped)
bag <- strsplit(stripped," ")
bag <- tolower(trimws(unlist(bag)))
#Stopwords
library(digIt)
stoplist <- digIt("stopwords")
library(knitr)
library(kableExtra)
library(rvest)
library(plyr)
library(DT)
speech <- "Now, one place to start is serious financial reform.  Look, I am not interested in punishing banks.  I'm interested in protecting our economy.  A strong, healthy financial market makes it possible for businesses to access credit and create new jobs. It channels the savings of families into investments that raise incomes.  But that can only happen if we guard against the same recklessness that nearly brought down our entire economy. We need to make sure consumers and middle-class families have the information they need to make financial decisions.  We can't allow financial institutions, including those that take your deposits, to take risks that threaten the whole economy. "
stripped <- gsub("[[:punct:]]","",speech)
stripped <- gsub("[[:digit:]]","",stripped)
stripped <- gsub("[^[:graph:]]"," ",stripped)
bag <- strsplit(stripped," ")
bag <- tolower(trimws(unlist(bag)))
#Stopwords
library(digIt)
stoplist <- digIt("stopwords")
stoplist <- as.vector(stoplist[,1])
#Read through text
vals <- as.data.frame(table(unlist(bag)))
vals <- vals[!(vals$Var1 %in% stoplist),]
vals$len <- nchar(as.character(vals$Var1))
vals <- vals[vals$len > 2,]
vals <- vals[order(-vals$Freq),]
colnames(vals) <- c("Terms", "Frequency of Term","Number of Characters")
row.names(vals) <- 1:nrow(vals)
kable(head(vals,4), booktabs = TRUE,
caption = 'Most frequent terms found in excerpt.')  %>%
kable_styling(latex_options = c("hold_position"))
example <- "We need to make sure consumers and middle-class families have the information they need to make financial decisions. We can't allow financial institutions, including those that take your deposits, to take risks that threaten the whole economy."
example <- gsub("[[:punct:]]","",tolower(example))
example <- as.character(unlist(strsplit(trimws(example), " ")))
kable(matrix( c(example, rep("",3)), nrow = 8,ncol = 5), booktabs = TRUE,
caption = 'Terms')  %>% kable_styling(latex_options = c("hold_position"))
example <- example[!(example %in% gsub("[[:punct:]]","", stoplist))]
knitr::kable(matrix(c(example, rep("",1)), nrow = 4,ncol = 4), booktabs = TRUE,
caption = 'Terms after removing stop words')  %>%
kable_styling(latex_options = c("hold_position"))
examp <- as.data.frame(table(example))
examp <- examp[order(-examp$Freq), ]
end <- cbind(examp[1:7,], rbind(examp[8:13,],data.frame(example = "", Freq = "")))
colnames(end) <- c("Term", "Freq", "Term", "Freq")
knitr::kable(end, caption = "Term Frequencies", booktabs = TRUE, row.names = FALSE)  %>%
kable_styling(latex_options = c("hold_position"))
require(knitr)
temp.table <- read.csv("data/loading_functions.csv")
pander::pander(temp.table, split.cell = 60, split.table = Inf, justify = "left",
caption = "Recommended functions to load an assortment of files.")
require(knitr)
temp.table <- read.csv("data/gas_target.csv")
pander::pander(temp.table, split.cell = 60, split.table = Inf, justify = "left",
caption = "Target format")
library(readr)
gulf <- read_csv("data/doe_usgulf.csv")
head(gulf, 3)
colnames(gulf) <- c("date", "gulf.price")
library(readxl)
attempt1 <- read_excel("data/doe_ny.xlsx", sheet = 1)
head(attempt1, 3)
#Load first two sheets
sheet1 <- read_excel("data/doe_ny.xlsx", sheet = 1, skip = 1)
sheet2 <- read_excel("data/doe_ny.xlsx", sheet = 2, skip = 1)
#Rename columns
colnames(sheet1) <- c("date", "ny.price")
colnames(sheet2) <- c("date", "ny.price")
ny <- rbind(sheet1, sheet2)
ny <- plyr::rbind.fill(sheet1, sheet2)
#Combine data
prices <- cbind(gulf, ny[,2])
#Calculate correlation
cor(prices[,-1])
budget <- c("Captain's Log, Stardate 1511.8. I have $10.20 for a big galactic mac.",
"The ensign has $1,20 in her pocket.",
"The ExO spent has $0.25 left after paying for overpriced warp core fuel.",
"Chief medical officer is the high roller with $53,13.")
require(stringr)
new <- str_replace_all(budget, ",", "\\.")
funds <- str_extract_all(new, "\\$\\d{1,2}\\.\\d{2}", simplify = TRUE)
print(funds)
funds <- str_replace_all(funds, "\\$","")
funds <- str_trim(funds)
print(funds)
money <- as.numeric(funds)
print(paste0("Total galactic big mac funds = $", sum(money)))
temp.table <- read.csv("data/string-manip.csv")
colnames(temp.table) <- c("Description", "Base R", "stringr")
pander::pander(temp.table, split.cell = 60, split.table = Inf, justify = "left",
caption = "Recommended text manipulation functions.")
laws <- c(". Dodd-Frank Act was signed into federal law on July 21, 2010.",
"Glass-Steagall Act was signed into federal law by FDR on June 16, 1933",
"Hatch Act went into effect on August 2, 1939",
"Sarbanes-Oxley Act was signed into law on July 30, 2002")
str_detect(laws, "[A-z]{1,}-[A-z]{1,}")
str_extract_all(laws, "[A-z]{1,}-[A-z]{1,}", simplify = TRUE)
#A sampling of street names
streets <- c("Bruckner Blvd", "Bowery", "Broadway", "Bway", "Bdway",
"Broad Street", "Bridge Street", "B'way")
#Search for two specific options
str_detect(streets, "Broadway|Bdway")
#Search for two variations of Broadway
str_detect(streets, "B(road|')way")
#Search for cases where either d or apostrophe are between B and way
str_detect(streets, "B[d']way")
big_dates <- c("Octavian became Augustus on 16 Jan 27 BCE",
"In the year 2000, a computer bug was expected to topple society.",
"In the 5400000000 years, our sun will become a red dwarf.")
#Return a 9 digit number
str_extract(big_dates, "\\d{9}")
#Return a 4 digit substring that is flanked by empty value at either end
str_extract(big_dates, "\\b\\d{4}\\b")
#Match a date that follows 16 January 27 BCE
str_extract(big_dates, "\\d{2}\\s\\w{3}\\s\\d{2}\\s\\w{3}")
headlines <- c("May to deliver speech on Brexit",
"Pound falls with May's comments",
"May: Brexit plans to be laid out in new year")
print(headlines)
#Find elements that contain May at the beginning of the string
str_extract(headlines, "^May")
#Find elements that contain Brexit at the beginning of the string
str_extract(headlines, "Brexit$")
statement <- c( "John Doe (SSN: 012-34-5678) has $2303 in savings in his account.",
"Georgette Smith  (SSN: 000-99-0000) owes $323 to the IRS.",
"Alexander Doesmith (SSN: 098-76-5432) was fined $14321 for overdue books.")
library(stringr)
new_statement <- str_replace(statement,"\\d{3}-\\d{2}-\\d{4}", "XXXXX")
print(new_statement)
#Find a replace dollar amount
new_statement <- str_replace(new_statement,"\\$(\\d{1,})", "XXXXX")
#Find and replace first and last name
new_statement <- str_replace(new_statement,"^[A-z]{1,} [A-z]{1,}", "XXXXX")
print(new_statement)
ref_table <- data.frame(name = str_extract(statement,"^[A-z]{1,} [A-z]{1,}"),
ssn = str_extract(statement,"\\d{3}-\\d{2}-\\d{4}"),
money = str_extract(statement,"\\$(\\d{1,})"))
print(ref_table)
require(lubridate)
d0 <- as_date("2010-08-20")
d1 <- mdy("01/20/2010")
d2 <- mdy_hm("01/20/2010 00:00 AM")
d3 <- ymd(20100101)
d1 - d3
y1 <- year(d0)
q1 <- quarter(d0)
paste0(y1, "Q", q1)
format(d0, "%Y-%m")
temp.table <- read.csv("data/examp_messy.csv")
pander::pander(temp.table, split.cell = 60, split.table = Inf, justify = "left",
caption = "Example of a messy data set.")
temp.table <- read.csv("data/examp_tidy.csv")
pander::pander(temp.table, split.cell = 60, split.table = Inf, justify = "left",
caption = "Example of a tidy data set.")
temp.table <- read.csv("data/df_v_matrix.csv")
colnames(temp.table) <-c(" ", "Matrix", "Data Frame")
pander::pander(temp.table, split.cell = 60, split.table = Inf, justify = "left",
caption = "Matrices versus Data Frames.")
load("data/chicago_crime.Rda")
library(kableExtra)
rownames(crimes) <- NULL
blank <- crimes[1:3, c(2,3,6,7)]
knitr::kable(blank,
row.names = FALSE,
booktabs = TRUE,
caption = "Example from crimes data set.")  %>%
kable_styling(latex_options = c("hold_position"))
crimes[7, 6]
#base R
crimes_geo <- crimes[, c("latitude", "longitude")]
#dplyr approach
crimes_geo <- select(crimes, latitude, longitude)
?select
#dplyr approach
crimes_geo <- select(as_tibble(crimes), latitude, longitude)
#dplyr approach
crimes_geo <- select(as_tibble(crimes), latitude)
#dplyr approach
crimes_geo <- select((crimes), latitude)
#dplyr approach
crimes_geo <- dplyr::select(crimes, latitude, longitude)
?select
knitr::kable(crimes_long[1:5,1:3], booktabs = TRUE,
caption = 'Example of long data.', digits = 2)
load("data/chicago_crime.Rda")
library(reshape2)
crimes_long <-   melt(crimes_ward, id = c("period"),
variable.name = "ward",
value.name = "arrest.rates")
load("data/chicago_ward.Rda")
load("data/chicago_wards.Rda")
load("data/chicago_ward.Rda")
library(reshape2)
crimes_long <-   melt(crimes_ward, id = c("period"),
variable.name = "ward",
value.name = "arrest.rates")
knitr::kable(crimes_long[1:5,1:3], booktabs = TRUE,
caption = 'Example of long data.', digits = 2)
knitr::kable(crimes_wide[1:5,1:5], booktabs = TRUE,
caption = 'Example of wide data.', digits = 2)
knitr::kable(crimes_ward[1:5,1:5], booktabs = TRUE,
caption = 'Example of wide data.', digits = 2)
load("data/chicago_ward.Rda")
library(reshape2)
crimes_long <-   melt(crimes_ward, id = c("period"),
variable.name = "ward",
value.name = "arrest.rates")
knitr::kable(crimes_long[1:5,1:3], booktabs = TRUE,
caption = 'Example of long data.', digits = 2)
knitr::kable(crimes_ward[1:5,1:5], booktabs = TRUE,
caption = 'Example of wide data.', digits = 2)
nrow(crimes_long/50)
nrow(crimes_long)/50
long <- crimes %>% group_by(ward) %>% summarise(nth(60))
long
long <- crimes %>% group_by(ward) %>% summarise(asd = nth(60))
long <- crimes %>% group_by(ward) %>% summarise(asd = n_th(60))
?nth
long <- crimes_long %>% group_by(ward) %>% summarise(asd = nth(60))
long <- crimes_long %>% group_by(ward) %>% summarise(asd = nth_value(60))
long <- crimes_long %>% group_by(ward) %>% summarise(asd = nth_value(arrest.rates, 60))
long <- crimes_long %>% group_by(ward) %>% summarise(asd = nth(arrest.rates, 60))
long
colnames(crimes_long)
long <- crimes_long %>%
group_by(period) %>%
summarise(asd = nth(arrest.rates, 60))
long
?summarise
knitr::kable(crimes_long[c(1,61,120),1:3], booktabs = TRUE,
caption = 'Example of long data.', digits = 2)
knitr::kable(crimes_long[c(1,61,121, 181),1:3], booktabs = TRUE,
caption = 'Example of long data.', digits = 2)
knitr::kable(crimes_long[c(1,61,121, 181, 241),1:3], booktabs = TRUE,
caption = 'Example of long data.', digits = 2)
load("data/chicago_ward.Rda")
library(reshape2)
crimes_long <-   melt(crimes_ward, id = c("period"),
variable.name = "ward",
value.name = "arrest.rates")
knitr::kable(crimes_long[c(1,61,121, 181, 241),1:3], booktabs = TRUE,
caption = 'Example of long data.', digits = 2)
Each row  Wide format, also referred to as unstacked,
load("data/chicago_ward.Rda")
library(reshape2)
crimes_long <-   melt(crimes_ward, id = c("period"),
variable.name = "ward",
value.name = "arrest.rates")
knitr::kable(crimes_long[c(1,61,121, 181, 241),1:3], booktabs = TRUE,
caption = 'Example of long data.', digits = 2)
knitr::kable(crimes_long[c(1,61,121, 181, 241),1:3], booktabs = TRUE,
caption = 'Example of long data.', digits = 2, row.names = FALSE)
knitr::kable(crimes_ward[1:5,1:5], booktabs = TRUE,
caption = 'Example of wide data.', digits = 2,
row.names = FALSE)
crimes_ward <- reshape(crimes_mon,
idvar = "ward",
timevar = "period",
direction = "wide")
#Prep Crime data (sloppy version)
setwd("/Users/jeff/Documents/Github/textbook/chapter4/data/")
#Prep Crime data (sloppy version)
setwd("/Users/jeff/Documents/Github/textbook/chapter4/data/")
crimes <- readr::read_csv("~/Downloads/Crimes_-_2001_to_present.csv")
colnames(crimes) <- gsub("[[:space:][:punct:]]", ".",tolower(colnames(crimes)))
crimes <- crimes[,-c(19,22, 16,17, 15)]
crimes$arrest <- crimes$arrest == "true"
crimes$domestic <- crimes$domestic == "true"
save(crimes, file = "chicago_crime.Rda")
#Reshape example
require(dplyr)
#Convert to date form and extract the the quarter
crimes$date1 <- mdy_hms(crimes$date)
crimes$period <- format(crimes$date1, "%Y-%m")
crimes <- crimes[complete.cases(crimes),]
crimes_mon <- crimes  %>%
group_by(period, ward) %>%
summarise(arrest.rate = 100 * mean(arrest))
crimes_mon <- as.data.frame(crimes_mon)
crimes_ward <- reshape(crimes_mon,
idvar = "ward",
timevar = "period",
direction = "wide")
crimes_mon <- crimes  %>%
group_by(period, ward) %>%
summarise(arrest.rate = 100 * mean(arrest))
crimes$date1 <- mdy_hms(crimes$date)
crimes$period <- format(crimes$date1, "%Y-%m")
crimes <- crimes[complete.cases(crimes),]
crimes_mon <- crimes  %>%
group_by(period, ward) %>%
summarise(arrest.rate = 100 * mean(arrest))
crimes_mon <- crimes  %>%
group_by(period, ward) %>%
summarise(mean(arrest))
table(crimes$period)
table(crimes$ward)
#Reshape example
require(dplyr)
crimes_mon <- crimes  %>%
group_by(period, ward) %>%
summarise(arrest.rate = mean(arrest))
crimes_mon <- crimes  %>%
group_by(period, ward) %>%
summarise(arrest.rate = n())
crimes_mon <- crimes  %>%
group_by(period, ward) %>%
summarise(arrest.rate = n())
#Reshape example
library(dplyr)
crimes_mon <- crimes  %>%
group_by(period, ward) %>%
summarise(arrest.rate = n())
#Reshape example
library(dplyr)
crimes_mon <- crimes  %>%
group_by(period, ward) %>%
summarise(arrest.rate = mean(arrest))
crimes  %>%
group_by(period, ward) %>%
summarise(arrest.rate = mean(arrest))
colnames(crimes)
crimes_mon <- crimes  %>%
group_by(ward) %>%
summarise(arrest.rate = mean(arrest))
class(crimes)
crimes <- as.data.frame(crimes_mon)
crimes <- readr::read_csv("~/Downloads/Crimes_-_2001_to_present.csv")
colnames(crimes) <- gsub("[[:space:][:punct:]]", ".",tolower(colnames(crimes)))
crimes <- crimes[,-c(19,22, 16,17, 15)]
crimes$arrest <- crimes$arrest == "true"
crimes$domestic <- crimes$domestic == "true"
crimes$date1 <- mdy_hms(crimes$date)
crimes$period <- format(crimes$date1, "%Y-%m")
crimes <- crimes[complete.cases(crimes),]
crimes <- as.data.frame(crimes)
crimes_mon <- crimes  %>%
group_by(period, ward) %>%
summarise(arrest.rate = mean(arrest))
aggregate(arrest ~ period + ward, data = crimes, FUN = mean)
aggregate(100*arrest ~ period + ward, data = crimes, FUN = mean)
crimes_mon <- aggregate(100*arrest ~ period + ward, data = crimes, FUN = mean)
crimes_ward <- reshape(crimes_mon,
idvar = "ward",
timevar = "period",
direction = "wide")
crimes_mon <- aggregate(arrest ~ period + ward, data = crimes, FUN = mean)
crimes_mon$arrest <- 100*crimes_mon$arrest
crimes_ward <- reshape(crimes_mon,
idvar = "ward",
timevar = "period",
direction = "wide")
crimes_ward[1:5,1:5]
knitr::kable(crimes_ward[1:5,1:5], booktabs = TRUE,
caption = 'Example of wide data.', digits = 2,
row.names = FALSE)
#Prep Crime data (sloppy version)
setwd("/Users/jeff/Documents/Github/textbook/chapter4/data/")
crimes <- readr::read_csv("~/Downloads/Crimes_-_2001_to_present.csv")
colnames(crimes) <- gsub("[[:space:][:punct:]]", ".",tolower(colnames(crimes)))
crimes <- crimes[,-c(19,22, 16,17, 15)]
crimes$arrest <- crimes$arrest == "true"
crimes$domestic <- crimes$domestic == "true"
save(crimes, file = "chicago_crime.Rda")
#Reshape example
require(dplyr)
#Convert to date form and extract the the quarter
crimes$date1 <- mdy_hms(crimes$date)
crimes$period <- format(crimes$date1, "%Y-%m")
crimes <- crimes[complete.cases(crimes),]
crimes_mon <- crimes  %>%
group_by(period, ward) %>%
summarise(arrest.rate = 100 * mean(arrest))
crimes_mon <- as.data.frame(crimes_mon)
crimes_ward <- reshape(crimes_mon,
idvar = "period",
timevar = "ward",
direction = "wide")
colnames(crimes_ward) <- gsub("arrest.rate", "ward",  colnames(crimes_ward))
save(crimes_ward, file = "crimes_ward.Rda")
require(lubridate)
require(lubridate)
crimes$date1 <- mdy_hms(crimes$date)
crimes$period <- format(crimes$date1, "%Y-%m")
crimes <- crimes[complete.cases(crimes),]
crimes_mon <- crimes  %>%
group_by(period, ward) %>%
summarise(arrest.rate = 100 * mean(arrest))
crimes_mon <- crimes  %>%
group_by_all(period, ward) %>%
summarise(arrest.rate = 100 * mean(arrest))
crimes_mon <- crimes  %>%
group_by_all(period, ward) %>%
summarise(arrest.rate = 100 * mean(arrest))
crimes_mon <- crimes  %>%
group_by(period, ward) %>%
summarise(arrest.rate = 100 * mean(arrest))
crimes_mon <- crimes  %>%
group_by(period, ward) %>%
summarise(arrest.rate = mean(arrest))
